PREHOOK: query: create table my_passwd (
username string,
uid int)
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
PREHOOK: Output: default@my_passwd
POSTHOOK: query: create table my_passwd (
username string,
uid int)
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@my_passwd
PREHOOK: query: insert into my_passwd values
                      ("Deepak", 1),
                      ("Gunther", 2),
                      ("Jason", 3),
                      ("Prasanth", 4),
                      ("Gopal", 5),
                      ("Sergey", 6)
PREHOOK: type: QUERY
PREHOOK: Input: default@values__tmp__table__1
PREHOOK: Output: default@my_passwd
POSTHOOK: query: insert into my_passwd values
                      ("Deepak", 1),
                      ("Gunther", 2),
                      ("Jason", 3),
                      ("Prasanth", 4),
                      ("Gopal", 5),
                      ("Sergey", 6)
POSTHOOK: type: QUERY
POSTHOOK: Input: default@values__tmp__table__1
POSTHOOK: Output: default@my_passwd
POSTHOOK: Lineage: my_passwd.uid EXPRESSION [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col2, type:string, comment:), ]
POSTHOOK: Lineage: my_passwd.username SIMPLE [(values__tmp__table__1)values__tmp__table__1.FieldSchema(name:tmp_values_col1, type:string, comment:), ]
PREHOOK: query: create view my_passwd_vw as select * from my_passwd limit 3
PREHOOK: type: CREATEVIEW
PREHOOK: Input: default@my_passwd
PREHOOK: Output: database:default
PREHOOK: Output: default@my_passwd_vw
POSTHOOK: query: create view my_passwd_vw as select * from my_passwd limit 3
POSTHOOK: type: CREATEVIEW
POSTHOOK: Input: default@my_passwd
POSTHOOK: Output: database:default
POSTHOOK: Output: default@my_passwd_vw
POSTHOOK: Lineage: my_passwd_vw.uid SIMPLE [(my_passwd)my_passwd.FieldSchema(name:uid, type:int, comment:null), ]
POSTHOOK: Lineage: my_passwd_vw.username SIMPLE [(my_passwd)my_passwd.FieldSchema(name:username, type:string, comment:null), ]
PREHOOK: query: grant select on table my_passwd to user hive_test_user
PREHOOK: type: GRANT_PRIVILEGE
PREHOOK: Output: default@my_passwd
FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. Error granting privileges: InvalidObjectException(message:SELECT is already granted on table [default,my_passwd] by hive_test_user)
PREHOOK: query: DROP TABLE IF EXISTS src
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src
PREHOOK: Output: default@src
POSTHOOK: query: DROP TABLE IF EXISTS src
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src
POSTHOOK: Output: default@src
PREHOOK: query: DROP TABLE IF EXISTS src1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src1
PREHOOK: Output: default@src1
POSTHOOK: query: DROP TABLE IF EXISTS src1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src1
POSTHOOK: Output: default@src1
PREHOOK: query: DROP TABLE IF EXISTS src_json
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src_json
PREHOOK: Output: default@src_json
POSTHOOK: query: DROP TABLE IF EXISTS src_json
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src_json
POSTHOOK: Output: default@src_json
PREHOOK: query: DROP TABLE IF EXISTS src_sequencefile
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src_sequencefile
PREHOOK: Output: default@src_sequencefile
POSTHOOK: query: DROP TABLE IF EXISTS src_sequencefile
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src_sequencefile
POSTHOOK: Output: default@src_sequencefile
PREHOOK: query: DROP TABLE IF EXISTS src_thrift
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src_thrift
PREHOOK: Output: default@src_thrift
POSTHOOK: query: DROP TABLE IF EXISTS src_thrift
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src_thrift
POSTHOOK: Output: default@src_thrift
PREHOOK: query: DROP TABLE IF EXISTS srcbucket
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket
PREHOOK: Output: default@srcbucket
POSTHOOK: query: DROP TABLE IF EXISTS srcbucket
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket
POSTHOOK: Output: default@srcbucket
PREHOOK: query: DROP TABLE IF EXISTS srcbucket2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcbucket2
PREHOOK: Output: default@srcbucket2
POSTHOOK: query: DROP TABLE IF EXISTS srcbucket2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcbucket2
POSTHOOK: Output: default@srcbucket2
PREHOOK: query: DROP TABLE IF EXISTS srcpart
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@srcpart
PREHOOK: Output: default@srcpart
POSTHOOK: query: DROP TABLE IF EXISTS srcpart
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@srcpart
POSTHOOK: Output: default@srcpart
PREHOOK: query: DROP TABLE IF EXISTS primitives
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS primitives
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest1
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest1
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest2
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest3
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest3
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest4
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest4
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest4_sequencefile
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest4_sequencefile
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest_j1
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest_j1
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest_g1
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest_g1
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS dest_g2
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS dest_g2
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS fetchtask_ioexception
PREHOOK: type: DROPTABLE
POSTHOOK: query: DROP TABLE IF EXISTS fetchtask_ioexception
POSTHOOK: type: DROPTABLE
PREHOOK: query: DROP TABLE IF EXISTS alltypesorc
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@alltypesorc
PREHOOK: Output: default@alltypesorc
POSTHOOK: query: DROP TABLE IF EXISTS alltypesorc
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@alltypesorc
POSTHOOK: Output: default@alltypesorc
PREHOOK: query: DROP TABLE IF EXISTS cbo_t1
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@cbo_t1
PREHOOK: Output: default@cbo_t1
POSTHOOK: query: DROP TABLE IF EXISTS cbo_t1
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@cbo_t1
POSTHOOK: Output: default@cbo_t1
PREHOOK: query: DROP TABLE IF EXISTS cbo_t2
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@cbo_t2
PREHOOK: Output: default@cbo_t2
POSTHOOK: query: DROP TABLE IF EXISTS cbo_t2
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@cbo_t2
POSTHOOK: Output: default@cbo_t2
PREHOOK: query: DROP TABLE IF EXISTS cbo_t3
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@cbo_t3
PREHOOK: Output: default@cbo_t3
POSTHOOK: query: DROP TABLE IF EXISTS cbo_t3
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@cbo_t3
POSTHOOK: Output: default@cbo_t3
PREHOOK: query: DROP TABLE IF EXISTS src_cbo
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@src_cbo
PREHOOK: Output: default@src_cbo
POSTHOOK: query: DROP TABLE IF EXISTS src_cbo
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@src_cbo
POSTHOOK: Output: default@src_cbo
PREHOOK: query: DROP TABLE IF EXISTS part
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@part
PREHOOK: Output: default@part
POSTHOOK: query: DROP TABLE IF EXISTS part
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@part
POSTHOOK: Output: default@part
PREHOOK: query: DROP TABLE IF EXISTS lineitem
PREHOOK: type: DROPTABLE
PREHOOK: Input: default@lineitem
PREHOOK: Output: default@lineitem
POSTHOOK: query: DROP TABLE IF EXISTS lineitem
POSTHOOK: type: DROPTABLE
POSTHOOK: Input: default@lineitem
POSTHOOK: Output: default@lineitem
